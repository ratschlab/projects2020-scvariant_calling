############ Generate simulated single cell reads for tumor cells

# You can run this in parallel with step 1 (generating healthy cells), but you have to wait for
# the healthy.truth.vcf to be generated by the varsim simulation for healthy cells (because the tumor
# cells are based on healthy cells)

# don't forget to run: "conda activate py2" before running this script

module load jdk # varsim doesn't work with openjdk

cov="01x"
n_cells=1000
coverage=10  # 1000 lanes and coverage 10 coresponds to actual coverage per cell of 10/1000=0.01

base_dir="/cluster/work/grlab/projects/projects2019-supervario/simulated_data/varsim"
out_dir=${base_dir}/cov${cov}/tumor
mkdir -p  ${out_dir}
touch "${out_dir}/empty_file"

healthy_vcf="${base_dir}/cov${cov}/healthy/healthy.truth.vcf"
echo -n "Waiting for ${healthy_vcf} to be generated..."
while [ ! -f ${healthy_vcf} ]; do sleep 10; echo -n .;  done;
echo "done"

command="time python2 ${base_dir}/varsim-0.8.4/varsim_somatic.py \
        --reference ${base_dir}/GRCh38_new.fa \
        --id tumor \
        --som_num_snp 40000 \
        --som_num_ins 250 \
        --som_num_del 250 \
        --som_num_mnp 200 \
        --som_num_complex 200 \
        --cosmic_vcf ${base_dir}/cosmic/cosmic.vcf.gz \
        --normal_vcf ${healthy_vcf} \
        --disable_sim \
        --simulator_executable doesnt_matter_we_are_not_simulating \
        --out_dir ${out_dir} \
        --log_dir ${out_dir}/logs --work_dir ${out_dir}/tmp --sv_insert_seq ${out_dir}/empty_file"

echo "Executing: ${command}"


# job typically takes 0.5-1 hours for 100 cells and 0.01 coverage
bsub  -J "sim-tumor" -W 24:00 -n 10 -R "rusage[mem=20000]" -R "span[hosts=1]"  -oo "${log_dir}/tumor.lsf.log" "${command}"

