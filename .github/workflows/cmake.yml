name: CMake

on: [push]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build_type: [Debug, Release]
        compiler: [g++-8]
        include:
          - compiler: g++-8
            cxx: g++-8
            cc: gcc-8

    steps:
      - uses: actions/checkout@v2

      - name: checkout submodules
        run: git submodule update --init --recursive

      - name: install dependencies
        run: sudo apt-get install libblas-dev

      - name: create build dir
        run: mkdir ${{runner.workspace}}/build

      - name: Configure CMake
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          export CC=$(which ${{ matrix.cc }})
          export CXX=$(which ${{ matrix.cxx }})
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: make -j

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ./tests

  build-macos:

    runs-on: macos-latest

    strategy:
      matrix:
        build_type: [Debug, Release]

    steps:
      - uses: actions/checkout@v2

      - name: checkout submodules
        run: git submodule update --init --recursive

      - name: install dependencies
        run: |
          brew install libomp
          brew install openblas

      - name: create build dir
        run: mkdir ${{runner.workspace}}/build

      - name: Configure CMake
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: make -j

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ./tests
